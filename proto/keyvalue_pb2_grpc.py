# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import keyvalue_pb2 as keyvalue__pb2

GRPC_GENERATED_VERSION = '1.73.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in keyvalue_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class KeyValueStub(object):
    """El servicio define los métodos RPC
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Set = channel.unary_unary(
                '/keyvalue.KeyValue/Set',
                request_serializer=keyvalue__pb2.SetRequest.SerializeToString,
                response_deserializer=keyvalue__pb2.SetResponse.FromString,
                _registered_method=True)
        self.Get = channel.unary_unary(
                '/keyvalue.KeyValue/Get',
                request_serializer=keyvalue__pb2.GetRequest.SerializeToString,
                response_deserializer=keyvalue__pb2.GetResponse.FromString,
                _registered_method=True)
        self.GetPrefix = channel.unary_unary(
                '/keyvalue.KeyValue/GetPrefix',
                request_serializer=keyvalue__pb2.GetPrefixRequest.SerializeToString,
                response_deserializer=keyvalue__pb2.GetPrefixResponse.FromString,
                _registered_method=True)
        self.Stat = channel.unary_unary(
                '/keyvalue.KeyValue/Stat',
                request_serializer=keyvalue__pb2.StatRequest.SerializeToString,
                response_deserializer=keyvalue__pb2.StatResponse.FromString,
                _registered_method=True)


class KeyValueServicer(object):
    """El servicio define los métodos RPC
    """

    def Set(self, request, context):
        """Almacena un par clave-valor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Recupera el valor para una clave
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrefix(self, request, context):
        """Recupera todos los valores cuyas claves comienzan con un prefijo
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stat(self, request, context):
        """Devuelve estadísticas internas del servidor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KeyValueServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=keyvalue__pb2.SetRequest.FromString,
                    response_serializer=keyvalue__pb2.SetResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=keyvalue__pb2.GetRequest.FromString,
                    response_serializer=keyvalue__pb2.GetResponse.SerializeToString,
            ),
            'GetPrefix': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrefix,
                    request_deserializer=keyvalue__pb2.GetPrefixRequest.FromString,
                    response_serializer=keyvalue__pb2.GetPrefixResponse.SerializeToString,
            ),
            'Stat': grpc.unary_unary_rpc_method_handler(
                    servicer.Stat,
                    request_deserializer=keyvalue__pb2.StatRequest.FromString,
                    response_serializer=keyvalue__pb2.StatResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'keyvalue.KeyValue', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('keyvalue.KeyValue', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class KeyValue(object):
    """El servicio define los métodos RPC
    """

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyvalue.KeyValue/Set',
            keyvalue__pb2.SetRequest.SerializeToString,
            keyvalue__pb2.SetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyvalue.KeyValue/Get',
            keyvalue__pb2.GetRequest.SerializeToString,
            keyvalue__pb2.GetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPrefix(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyvalue.KeyValue/GetPrefix',
            keyvalue__pb2.GetPrefixRequest.SerializeToString,
            keyvalue__pb2.GetPrefixResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Stat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/keyvalue.KeyValue/Stat',
            keyvalue__pb2.StatRequest.SerializeToString,
            keyvalue__pb2.StatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
